const { Telegraf } = require('telegraf');
const bot = new Telegraf('7209885388:AAEOBty7DIXSgY_F0_05DhUntMy3jpCoPW0');

const ADMIN_ID = '744187097';
let orderId = 0;
let messages = {};
let usersInProcess = {};
let lastRequestTime = {};
const COOLDOWN_MS = 5000; // 5 —Å–µ–∫

// ======================= Middleware –¥–ª—è –∞–Ω—Ç–∏—Å–ø–∞–º–∞ =======================
bot.use((ctx, next) => {
  const userId = ctx.from?.id;
  const now = Date.now();

  if (lastRequestTime[userId] && now - lastRequestTime[userId] < COOLDOWN_MS) {
    return; // —Å–ø–∞–º ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  }

  lastRequestTime[userId] = now;
  return next();
});

// ======================= –ö–æ–º–∞–Ω–¥–∞ /start =======================
bot.start((ctx) => {
  const userId = ctx.from.id;

  if (usersInProcess[userId]) {
    return ctx.reply('–í—ã —É–∂–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞—è–≤–∫—É. –•–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å?', {
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'cancel_request' }]
        ]
      }
    });
  }

  return ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Pick Your Hero! –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üßæ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'order' }]
      ]
    }
  });
});

// ======================= –ö–æ–º–∞–Ω–¥–∞ /help =======================
bot.command('help', (ctx) => {
  ctx.reply('–ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏.\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É.');
});

// ======================= –ö–Ω–æ–ø–∫–∞ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É" =======================
bot.action('order', (ctx) => {
  const userId = ctx.from.id;

  if (usersInProcess[userId]) {
    return ctx.reply('–í—ã —É–∂–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞—è–≤–∫—É. –•–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å?', {
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'cancel_request' }]
        ]
      }
    });
  }

  return ctx.editMessageText('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üì∑ –°–∫–∏–Ω –ø–æ —Ñ–æ—Ç–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ —Å–∫–∏–Ω–∞!', callback_data: 'photo' }],
        [{ text: 'üéÆ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–∫–∏–Ω', web_app: { url: 'https://telegram-mini-app-three-rho.vercel.app' } }]
      ]
    }
  });
});

// ======================= –ö–Ω–æ–ø–∫–∞ "–°–∫–∏–Ω –ø–æ —Ñ–æ—Ç–æ" =======================
bot.action('photo', (ctx) => {
  const userId = ctx.from.id;

  if (usersInProcess[userId]) {
    return ctx.reply('–í—ã —É–∂–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞—è–≤–∫—É. –•–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å?', {
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'cancel_request' }]
        ]
      }
    });
  }

  usersInProcess[userId] = true;

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
  setTimeout(() => {
    delete usersInProcess[userId];
  }, 30 * 60 * 1000);

  return ctx.editMessageText('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ —Å–∫–∏–Ω–∞!', {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'order' }]
      ]
    }
  });
});

// ======================= –ü—Ä–∏—ë–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ =======================
bot.on('photo', async (ctx) => {
  const userId = ctx.from.id;

  if (!usersInProcess[userId]) {
    return ctx.reply('–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É".');
  }

  // –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ñ–æ—Ç–æ
  const photo = ctx.message.photo.at(-1);
  if (!photo) return;

  orderId++;
  const user = ctx.from.username || ctx.from.first_name;
  const photoId = photo.file_id;

  console.log(`‚úÖ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @${ctx.from.username || '–±–µ–∑ –Ω–∏–∫–∞'} (${ctx.from.id})`);

  const textMsg = await bot.telegram.sendMessage(ADMIN_ID, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} —Å –Ω–∏–∫–æ–º @${ctx.from.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'} –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ.`);
  const photoMsg = await bot.telegram.sendPhoto(ADMIN_ID, photoId, { caption: `–§–æ—Ç–æ –æ—Ç ${user}` });

  messages[orderId] = {
    messageId: textMsg.message_id,
    photoMessageId: photoMsg.message_id
  };

  await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'cancel_request' }]
      ]
    }
  });
});

// ======================= –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏ =======================
bot.action('cancel_request', (ctx) => {
  const userId = ctx.from.id;

  // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É –∞–¥–º–∏–Ω–∞, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  for (const id in messages) {
    if (messages[id]) {
      const { messageId, photoMessageId } = messages[id];
      bot.telegram.deleteMessage(ADMIN_ID, messageId).catch(() => {});
      bot.telegram.deleteMessage(ADMIN_ID, photoMessageId).catch(() => {});
      delete messages[id];
    }
  }

  delete usersInProcess[userId];

  return ctx.editMessageText('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üßæ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'order' }]
      ]
    }
  });
});

// ======================= –ó–∞–ø—É—Å–∫ =======================
bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ');
